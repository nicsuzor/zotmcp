# @package _global_
# Zotero Vectorization Pipeline for ZotMCP
#
# Usage: python -m buttermilk.pipeline.runner --config-path conf --config-name vectorize

defaults:
  - zotero
  - db: upstream
  - _self_

job: vectorize_zotero

session:
  template_paths:
    - templates

vectoriser:
  _target_: buttermilk.data.vector.ChromaDBEmbeddings
  persist_directory: ${storage.zotero_vectors.persist_directory}
  collection_name: ${storage.zotero_vectors.collection_name}
  embedding_model: ${storage.zotero_vectors.embedding_model}
  dimensionality: ${storage.zotero_vectors.dimensionality}
  concurrency: ${pipeline.concurrency}
  sync_batch_size: 500
  deduplication_strategy: record_id  # Skip existing records before downloading
  enable_record_cache: true

pipeline:
  _target_: buttermilk.pipeline.PipelineOrchestrator
  pipeline_name: zotero_vectorization
  concurrency: 1
  max_records: 200

  # Source: Zotero library with deduplication filter
  source:
    _target_: buttermilk.libs.zotero.ZoteroSource
    library_id: ${oc.env:ZOTERO_LIBRARY_ID}
    save_dir: ${oc.env:HOME}/.cache/buttermilk/zotero/state
    filter:
      _target_: buttermilk.libs.zotero.VectorStoreExistenceFilter
      vector_store: ${vectoriser}
    force_full_sync: false
    max_records: ${pipeline.max_records}

  processors:
    # 0. Download PDFs and extract full text
    - _target_: buttermilk.libs.zotero.ZoteroDownloadProcessor
      library_id: ${oc.env:ZOTERO_LIBRARY_ID}
      save_dir: ${oc.env:HOME}/.cache/buttermilk/zotero/items

    # 1. Generate citations using LLM
    - _target_: buttermilk.tools.citator.Citator
      model: gemini25flash
      template: citator

    # 2. Chunk text semantically
    - _target_: buttermilk.data.vector.SemanticSplitter
      chunk_size: 500
      chunk_overlap: 200

    # 3. Generate embeddings (pure, no side effects)
    - _target_: buttermilk.processors.embeddings.EmbeddingGenerator
      embedding_model: ${storage.zotero_vectors.embedding_model}
      dimensionality: ${storage.zotero_vectors.dimensionality}
      embedding_batch_size: 100
      embedding_max_retries: 5
      embedding_cooldown_seconds: 0.1

    # 4. Store in ChromaDB
    - ${vectoriser}

